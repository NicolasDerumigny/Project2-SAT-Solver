Terminals unused in grammar

   TK_XOR
   TK_IMPLY
   TK_EQ


Grammar

    0 $accept: input $end

    1 input: expression TK_EOF

    2 expression: TK_VAR
    3           | TK_ENOT expression
    4           | TK_VNOT TK_VAR
    5           | TK_LPAREN expression TK_RPAREN
    6           | expression TK_CONJ expression
    7           | expression TK_DISJ expression


Terminals, with rules where they appear

$end (0) 0
error (256)
TK_CONJ (258) 6
TK_DISJ (259) 7
TK_XOR (260)
TK_IMPLY (261)
TK_EQ (262)
TK_LPAREN (263) 5
TK_RPAREN (264) 5
TK_ENOT (265) 3
TK_VNOT (266) 4
TK_EOF (267) 1
TK_VAR (268) 2 4


Nonterminals, with rules where they appear

$accept (14)
    on left: 0
input (15)
    on left: 1, on right: 0
expression (16)
    on left: 2 3 4 5 6 7, on right: 1 3 5 6 7


State 0

    0 $accept: . input $end
    1 input: . expression TK_EOF
    2 expression: . TK_VAR
    3           | . TK_ENOT expression
    4           | . TK_VNOT TK_VAR
    5           | . TK_LPAREN expression TK_RPAREN
    6           | . expression TK_CONJ expression
    7           | . expression TK_DISJ expression

    TK_LPAREN  shift, and go to state 1
    TK_ENOT    shift, and go to state 2
    TK_VNOT    shift, and go to state 3
    TK_VAR     shift, and go to state 4

    input       go to state 5
    expression  go to state 6


State 1

    2 expression: . TK_VAR
    3           | . TK_ENOT expression
    4           | . TK_VNOT TK_VAR
    5           | . TK_LPAREN expression TK_RPAREN
    5           | TK_LPAREN . expression TK_RPAREN
    6           | . expression TK_CONJ expression
    7           | . expression TK_DISJ expression

    TK_LPAREN  shift, and go to state 1
    TK_ENOT    shift, and go to state 2
    TK_VNOT    shift, and go to state 3
    TK_VAR     shift, and go to state 4

    expression  go to state 7


State 2

    2 expression: . TK_VAR
    3           | . TK_ENOT expression
    3           | TK_ENOT . expression
    4           | . TK_VNOT TK_VAR
    5           | . TK_LPAREN expression TK_RPAREN
    6           | . expression TK_CONJ expression
    7           | . expression TK_DISJ expression

    TK_LPAREN  shift, and go to state 1
    TK_ENOT    shift, and go to state 2
    TK_VNOT    shift, and go to state 3
    TK_VAR     shift, and go to state 4

    expression  go to state 8


State 3

    4 expression: TK_VNOT . TK_VAR

    TK_VAR  shift, and go to state 9


State 4

    2 expression: TK_VAR .

    $default  reduce using rule 2 (expression)


State 5

    0 $accept: input . $end

    $end  shift, and go to state 10


State 6

    1 input: expression . TK_EOF
    6 expression: expression . TK_CONJ expression
    7           | expression . TK_DISJ expression

    TK_CONJ  shift, and go to state 11
    TK_DISJ  shift, and go to state 12
    TK_EOF   shift, and go to state 13


State 7

    5 expression: TK_LPAREN expression . TK_RPAREN
    6           | expression . TK_CONJ expression
    7           | expression . TK_DISJ expression

    TK_CONJ    shift, and go to state 11
    TK_DISJ    shift, and go to state 12
    TK_RPAREN  shift, and go to state 14


State 8

    3 expression: TK_ENOT expression .  [TK_CONJ, TK_DISJ, TK_RPAREN, TK_EOF]
    6           | expression . TK_CONJ expression
    7           | expression . TK_DISJ expression

    $default  reduce using rule 3 (expression)

    Conflict between rule 3 and token TK_CONJ resolved as reduce (TK_CONJ < TK_ENOT).
    Conflict between rule 3 and token TK_DISJ resolved as reduce (TK_DISJ < TK_ENOT).


State 9

    4 expression: TK_VNOT TK_VAR .

    $default  reduce using rule 4 (expression)


State 10

    0 $accept: input $end .

    $default  accept


State 11

    2 expression: . TK_VAR
    3           | . TK_ENOT expression
    4           | . TK_VNOT TK_VAR
    5           | . TK_LPAREN expression TK_RPAREN
    6           | . expression TK_CONJ expression
    6           | expression TK_CONJ . expression
    7           | . expression TK_DISJ expression

    TK_LPAREN  shift, and go to state 1
    TK_ENOT    shift, and go to state 2
    TK_VNOT    shift, and go to state 3
    TK_VAR     shift, and go to state 4

    expression  go to state 15


State 12

    2 expression: . TK_VAR
    3           | . TK_ENOT expression
    4           | . TK_VNOT TK_VAR
    5           | . TK_LPAREN expression TK_RPAREN
    6           | . expression TK_CONJ expression
    7           | . expression TK_DISJ expression
    7           | expression TK_DISJ . expression

    TK_LPAREN  shift, and go to state 1
    TK_ENOT    shift, and go to state 2
    TK_VNOT    shift, and go to state 3
    TK_VAR     shift, and go to state 4

    expression  go to state 16


State 13

    1 input: expression TK_EOF .

    $default  reduce using rule 1 (input)


State 14

    5 expression: TK_LPAREN expression TK_RPAREN .

    $default  reduce using rule 5 (expression)


State 15

    6 expression: expression . TK_CONJ expression
    6           | expression TK_CONJ expression .  [TK_CONJ, TK_DISJ, TK_RPAREN, TK_EOF]
    7           | expression . TK_DISJ expression

    $default  reduce using rule 6 (expression)

    Conflict between rule 6 and token TK_CONJ resolved as reduce (%left TK_CONJ).
    Conflict between rule 6 and token TK_DISJ resolved as reduce (TK_DISJ < TK_CONJ).


State 16

    6 expression: expression . TK_CONJ expression
    7           | expression . TK_DISJ expression
    7           | expression TK_DISJ expression .  [TK_DISJ, TK_RPAREN, TK_EOF]

    TK_CONJ  shift, and go to state 11

    $default  reduce using rule 7 (expression)

    Conflict between rule 7 and token TK_CONJ resolved as shift (TK_DISJ < TK_CONJ).
    Conflict between rule 7 and token TK_DISJ resolved as reduce (%left TK_DISJ).
