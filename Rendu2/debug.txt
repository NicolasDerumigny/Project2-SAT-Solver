==22649== Memcheck, a memory error detector
==22649== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==22649== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==22649== Command: ./resol Examples/Rand1.cnf -v
==22649== 
Formula in input:
((((v4) /\ (v1 \/ ¬v1 \/ v2)) /\ (v4)) /\ (¬v2)) /\ (¬v3 \/ ¬v3)
==22649== Invalid write of size 8
==22649==    at 0x4070A7: appendClause (clause.cpp:183)
==22649==    by 0x4070A7: assignation::updateClause(bool) (assignation.cpp:65)
==22649==    by 0x405CF9: updateStatus (assignation.cpp:105)
==22649==    by 0x405CF9: var::assignValue(int, bool) (var.cpp:34)
==22649==    by 0x4096EE: main (main.cpp:52)
==22649==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==22649== 
==22649== 
==22649== Process terminating with default action of signal 11 (SIGSEGV)
==22649==  Access not within mapped region at address 0x0
==22649==    at 0x4070A7: appendClause (clause.cpp:183)
==22649==    by 0x4070A7: assignation::updateClause(bool) (assignation.cpp:65)
==22649==    by 0x405CF9: updateStatus (assignation.cpp:105)
==22649==    by 0x405CF9: var::assignValue(int, bool) (var.cpp:34)
==22649==    by 0x4096EE: main (main.cpp:52)
==22649==  If you believe this happened as a result of a stack
==22649==  overflow in your program's main thread (unlikely but
==22649==  possible), you can try to increase the size of the
==22649==  main thread stack using the --main-stacksize= flag.
==22649==  The main thread stack size used in this run was 8388608.
==22649== 
==22649== HEAP SUMMARY:
==22649==     in use at exit: 17,706 bytes in 45 blocks
==22649==   total heap usage: 98 allocs, 53 frees, 35,817 bytes allocated
==22649== 
==22649== LEAK SUMMARY:
==22649==    definitely lost: 0 bytes in 0 blocks
==22649==    indirectly lost: 0 bytes in 0 blocks
==22649==      possibly lost: 0 bytes in 0 blocks
==22649==    still reachable: 17,706 bytes in 45 blocks
==22649==         suppressed: 0 bytes in 0 blocks
==22649== Rerun with --leak-check=full to see details of leaked memory
==22649== 
==22649== For counts of detected and suppressed errors, rerun with: -v
==22649== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
